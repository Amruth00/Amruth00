module sr_ff(clk, reset, s, r, q, qb);
  input clk, reset, s, r;
  output q, qb;
  reg q;
  always @(posedge clk or negedge reset) begin
    if (reset == 0)
      q <= 0;
    else begin
      if (s == 0 && r == 0)
        q <= q;
      if (s == 0 && r == 1)
        q <= 1'b0;
      if (s == 1 && r == 0)
        q <= 1'b1;
      if (s == 1 && r == 1)
        q <= 1'bx;
    end
  end
  assign qb = ~q;
endmodule

########## TEST BENCH ##########

module srff_test();
  reg clk, reset, s, r;
  wire q, qb;
  sr_ff srff1(clk, reset, s, r, q, qb);
  initial begin
    clk = 1'b0;
  end
  always begin
    #5 clk = ~clk;
  end
  initial begin
    reset = 1'b0; s = 1'b0; r = 1'b0;
    #10 s = 1'b1; r = 1'b1;
    #10 s = 1'b1; r = 1'b0;
    #10 reset = 1'b1; s = 1'b0; r = 1'b0;
    #10 s = 1'b0; r = 1'b1;
    #10 s = 1'b1; r = 1'b0;
    #10 s = 1'b0; r = 1'b0;
    #10 s = 1'b1; r = 1'b1;
  end
  initial
    #100 $finish;
endmodule
